name: website-ci
on:
#  push:
#    branches:
#      - master
  pull_request:
    types: [opened, reopened]
    branches:
      - master
permissions:
  id-token: write
  contents: read
env:
  AWS_REGION: us-east-1
  APPLICATION: website
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::123456789:role/github-actions
          aws-region: ${{ env.AWS_REGION }}
          audience: sts.amazonaws.com
      - name: ECR login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Setup buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker build/push
        uses: docker/build-push-action@v5
        env:
          DOCKER_IMAGE: "${{ steps.login-ecr.outputs.registry }}/${{ env.APPLICATION }}:${{ github.sha }}"
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE }}
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::123456789:role/github-actions
          aws-region: ${{ env.AWS_REGION }}
          audience: sts.amazonaws.com
      - name: ECR login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Run tests
        env:
          DOCKER_IMAGE: "${{ steps.login-ecr.outputs.registry }}/${{ env.APPLICATION }}:${{ github.sha }}"
        run: docker run --rm ${{ env.DOCKER_IMAGE }} npm test
        shell: bash
